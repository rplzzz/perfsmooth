% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perfsmooth.R
\name{perfsmooth}
\alias{perfsmooth}
\title{Find an optimal monotonic performance curve.}
\usage{
perfsmooth(x, y, N, maxdegree = 5, xinterval = c(0, 1), itmax = 2500)
}
\arguments{
\item{x}{x-values of control points.}

\item{y}{y-values of control points.  These should be fractions between 0 and 1.}

\item{N}{Number of cases that contributed to each y value.}

\item{maxdegree}{Maximum degree to use in the Legendre series.  Must be <= 10.}

\item{xinterval}{Domain of valid values for \code{x} (whether or not the entire
interval is actually represented in the x values).  Default is [0,1].}

\item{itmax}{Maximum number of iterations in the solver}
}
\value{
Vector of Legendre series coefficients.
}
\description{
Find a curve that best matches a set of points, subject to the constraint
that the curve must be monotonic.
}
\details{
The points are assumed to be observations of a binary event, which give an
estimate of the probability of the event.  The uncertainty of those probability
values is therefore beta distributed with parameters derived from the number
of observations.

The intended use here is for a case where the x-values are a measure of
algorithm sensitivity (with 0 being highly selective and 1 being highly sensitive),
and the y-values are PPV (or similar measure).  A more selective algorithm should
generate fewer false positives, but with fewer cases, there is more uncertainty
in the measured value.

The smoothed curve is represented as a series of Legendre polynomials, up to
degree 10 (or less, if specified).  The return value is the vector of series coefficients.
}
